{"version":3,"sources":["Components/Logo/brain.png","Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/Rank/Rank.js","Components/ImageLinkForm/ImageLinkForm.js","Components/ImageDetection/ImageDetection.js","Components/SignIn/SignIn.js","Components/Register/Register.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","paddingTop","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onEnterSubmit","type","placeholder","onChange","onKeyDown","ImageDetection","image_url","box","id","top","top_row","right","right_col","bottom","bottom_row","left","left_col","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","event","setState","user_input","target","calculateFaceLimits","data","box_limits","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","displayFaceLimits","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","keyCode","route","renderSwitch","this","params","particleAnimation","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eefc5259.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.584371a1.png\";","import React, { Fragment } from \"react\";\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  return (\n    <Fragment>\n      {isSignedIn ? (\n        <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <p\n            onClick={() => onRouteChange(\"signout\")}\n            className=\"f3 dim link white pa3 pr5 pb3 pointer\"\n          >\n            Sign Out\n          </p>\n        </nav>\n      ) : (\n        <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <p\n            onClick={() => onRouteChange(\"signin\")}\n            className=\"f3 dim link white pa3 pr5 pb3 pointer\"\n          >\n            Sign In\n          </p>\n\n          <p\n            onClick={() => onRouteChange(\"register\")}\n            className=\"f3 dim link white pa3 pr5 pb3 pointer\"\n          >\n            Register\n          </p>\n        </nav>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Navigation;\n","import React, { Fragment } from \"react\";\nimport Tilt from \"react-tilt\";\nimport brain from \"./brain.png\";\nimport \"./Logo.css\";\n\nconst Logo = () => {\n  return (\n    <Fragment>\n      <div className=\"ma5 mt0\">\n        <Tilt\n          className=\"Tilt br2 shadow-2\"\n          options={{ max: 50 }}\n          style={{ height: 150, width: 150 }}\n        >\n          <div className=\"Tilt-inner\">\n            <img src={brain} alt=\"SmartBrain\" style={{ paddingTop: \"5px\" }} />\n          </div>\n        </Tilt>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Logo;\n","import React, { Fragment } from \"react\";\n\nconst Rank = () => {\n  return (\n    <Fragment>\n      <div>\n        <div className=\"pb4\">\n          <div className=\"f3 white\">{\"Hi, user, your current rank is\"}</div>\n          <div className=\"f1 white\">{\"#10\"}</div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Rank;\n","import React, { Fragment } from \"react\";\nimport \"./ImageLinkForm.css\";\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit, onEnterSubmit }) => {\n  return (\n    <Fragment>\n      <div>\n        <p className=\"f3 white solid \">\n          {\"This app will detect your image's faces\"}\n        </p>\n        <div className=\"center\">\n          <div className=\"center form pa4 br3 shadow-5\">\n            <input\n              className=\"f4 pa2 w-70 center\"\n              type=\"text\"\n              placeholder=\"Enter your link\"\n              onChange={onInputChange}\n              onKeyDown={onEnterSubmit}\n            />\n            <button\n              className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-blue\"\n              onClick={onButtonSubmit}\n            >\n              {\" \"}\n              Detect{\" \"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ImageLinkForm;\n","import React, { Fragment } from \"react\";\nimport \"./ImageDetection.css\";\n\nconst ImageDetection = ({ image_url, box }) => {\n  return (\n    <Fragment>\n      <div className=\"center ma\">\n        <div className=\"absolute mt2\">\n          <img\n            id=\"image\"\n            src={image_url}\n            alt=\"Detection\"\n            width=\"500px\"\n            height=\"auto\"\n          />\n          <div\n            className=\"bounding-box\"\n            style={{\n              top: box.top_row,\n              right: box.right_col,\n              bottom: box.bottom_row,\n              left: box.left_col\n            }}\n          ></div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ImageDetection;\n","import React, { Fragment } from \"react\";\n\nconst SignIn = ({ onRouteChange }) => {\n  return (\n    <Fragment>\n      <article className=\"br2 ba shadow-4 b--white-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 white-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"b br3 pa2 white input-reset ba bg-transparent w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b br3 pa2 white input-reset ba bg-transparent w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"lh-copy mt3\">\n              <input\n                className=\"white b br3 ph3 pv2 input-reset ba bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n                onClick={() => onRouteChange(\"home\")}\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange(\"register\")}\n                className=\"f6 link dim white db pointer\"\n              >\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default SignIn;\n","import React, { Fragment } from \"react\";\n\nconst Register = ({ onRouteChange }) => {\n  return (\n    <Fragment>\n      <article className=\"br2 ba shadow-4 b--white-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 white-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  className=\"b br3 pa2 white input-reset ba bg-transparent w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"b br3 pa2 white input-reset ba bg-transparent w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b br3 pa2 white input-reset ba bg-transparent w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                className=\"white b br3 ph3 pv2 input-reset ba bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n                onClick={() => onRouteChange(\"signin\")}\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","// Packages\nimport React, { Component } from \"react\";\nimport particleAnimation from \"./particlesjs-config.json\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\n\n// User Components\nimport Navigation from \"../Components/Navigation/Navigation.js\";\nimport Logo from \"../Components/Logo/Logo.js\";\nimport Rank from \"../Components/Rank/Rank.js\";\nimport ImageLinkForm from \"../Components/ImageLinkForm/ImageLinkForm.js\";\nimport ImageDetection from \"../Components/ImageDetection/ImageDetection.js\";\nimport SignIn from \"../Components/SignIn/SignIn.js\";\nimport Register from \"../Components/Register/Register.js\";\nimport \"./App.css\";\n\n// Initialize with API Key\nconst app = new Clarifai.App({ apiKey: \"f73fa5b8f7e946c3820224301837db65\" });\n\nclass App extends Component {\n  // React Component Constructor\n  constructor() {\n    super();\n    this.state = {\n      user_input: \"\",\n      image_url: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false\n    };\n  }\n\n  onInputChange = event => {\n    // Adds the text input to property user_input\n    this.setState({ user_input: event.target.value });\n  };\n\n  calculateFaceLimits = data => {\n    const box_limits = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      top_row: height * box_limits.top_row,\n      bottom_row: height * (1 - box_limits.bottom_row),\n      left_col: width * box_limits.left_col,\n      right_col: width * (1 - box_limits.right_col)\n    };\n  };\n\n  displayFaceLimits = box => {\n    this.setState({ box: box });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ image_url: this.state.user_input });\n\n    // API Promise\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        // Using image_url can lead to a 404 Bad Request\n        this.state.user_input\n      )\n      .then(response =>\n        this.displayFaceLimits(this.calculateFaceLimits(response))\n      )\n      .catch(err => console.log(err));\n  };\n\n  onEnterSubmit = event => {\n    // When Enter key is pressed\n    if (event.keyCode === 13) {\n      this.setState({ image_url: this.state.user_input });\n\n      // API Promise\n      app.models\n        .predict(\n          Clarifai.FACE_DETECT_MODEL,\n          // Using image_url can lead to a 404 Bad Request\n          this.state.user_input\n        )\n        .then(response =>\n          this.displayFaceLimits(this.calculateFaceLimits(response))\n        )\n        .catch(err => console.log(err));\n    }\n  };\n\n  onRouteChange = route => {\n    route === \"home\"\n      ? this.setState({ isSignedIn: true })\n      : this.setState({ isSignedIn: false });\n    this.setState({ route: route });\n  };\n\n  renderSwitch = route => {\n    const {\n      onInputChange,\n      onButtonSubmit,\n      onEnterSubmit,\n      onRouteChange\n    } = this;\n    const { image_url, box, isSignedIn } = this.state;\n\n    switch (route) {\n      case \"home\":\n        return (\n          <div>\n            <Navigation onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={onInputChange}\n              onButtonSubmit={onButtonSubmit}\n              onEnterSubmit={onEnterSubmit}\n            />\n            <ImageDetection image_url={image_url} box={box} />\n          </div>\n        );\n\n      case \"signin\":\n        return (\n          <div>\n            <Navigation onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n            <SignIn onRouteChange={onRouteChange} />\n          </div>\n        );\n\n      case \"register\":\n        return (\n          <div>\n            <Navigation onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n            <Register onRouteChange={onRouteChange} />\n          </div>\n        );\n\n      default:\n        return (\n          <div>\n            <Navigation onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n            <SignIn onRouteChange={onRouteChange} />\n          </div>\n        );\n    }\n  };\n\n  render() {\n    const { renderSwitch } = this;\n    const { route } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleAnimation} />\n        <div>{renderSwitch(route)}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"tachyons\";\nimport \"react-tilt\";\nimport \"clarifai\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}